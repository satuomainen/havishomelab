#
# Deploy kube-mdns to broadcast the all hostnames configured in ingresses.
#
# To be deployed to namespace kube-system.
#
# To deploy: kubectl apply -n kube-system -f mdns-kube-deployment.yaml
# To remove: kubectl delete -n kube-system -f mdns-kube-deployment.yaml
#
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-mdns-clusterrole
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions","networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-mdns-clusterrolebinding
subjects:
- kind: ServiceAccount
  name: kube-mdns-service-account
  # NB! This namespace must match the ns where the deployment is going
  namespace: kube-system
roleRef:
  kind: ClusterRole
  name: kube-mdns-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-mdns-service-account

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-mdns
  labels:
    app: kube-mdns
spec:
  selector:
    matchLabels:
      app: kube-mdns
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: kube-mdns
    spec:
      serviceAccountName: kube-mdns-service-account
      hostNetwork: true
      containers:
        - image: ghcr.io/dersteph/kube-mdns:latest
          name: kube-mdns
          imagePullPolicy: Always
      restartPolicy: Always

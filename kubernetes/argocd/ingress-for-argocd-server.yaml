#
# This will expose ArgoCD UI to the local network as `argocd.local`
#
# To deploy: kubectl apply -n argocd -f ingress-for-argocd-server.yaml
# To remove: kubectl delete -n argocd -f ingress-for-argocd-server.yaml
#
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: argocd-server-ingress
#  namespace: argocd
#  annotations:
#    cert-manager.io/cluster-issuer: "k3s-ca-issuer"
#spec:
#  ingressClassName: traefik
#  tls:
#    - hosts:
#        - argocd.local
#        - argocd-server.argocd
#        - argocd-server.argocd.svc.cluster.local
#      secretName: argocd-tls
#  rules:
#    - host: argocd.local
#      http:
#        paths:
#          - path: /
#            pathType: Prefix
#            backend:
#              service:
#                name: argocd-server
#                port:
#                  number: 8080
#---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd
  namespace: argocd
  annotations:
    cert-manager.io/cluster-issuer: "k3s-ca-issuer"
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/service.serversscheme: "https"
spec:
  ingressClassName: traefik
  rules:
    - host: argocd.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: argocd-server
                port:
                  number: 80
  tls:
    - hosts:
        - argocd.local
      secretName: argocd-tls

---
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: argocd-server-ingress
#  annotations:
#    cert-manager.io/cluster-issuer: "k3s-ca-issuer"
#    #traefik.ingress.kubernetes.io/router.entrypoints: websecure
#    #nginx.ingress.kubernetes.io/ssl-redirect: "false"
#    #nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
#spec:
#  ingressClassName: traefik
#  tls:
#    - hosts:
#        - argocd.local
#      secretName: argocd-tls
#  rules:
#    - host: argocd-server.local
#      http:
#        paths:
#          - path: /
#            pathType: Prefix
#            backend:
#              service:
#                name: argocd-server
#                port:
#                  number: 80
#---
#apiVersion: traefik.io/v1alpha1
#kind: IngressRouteTCP
#metadata:
#  name: gitea-ssh-ingress
#  namespace: gitea
#spec:
#  entryPoints:
#    - ssh
#  routes:
#    - match: HostSNI(`*`)
#      services:
#        - name: gitea-ssh
#          port: 22
